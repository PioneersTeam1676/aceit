{"version":3,"file":"js/custom/apps/projects/settings/settings.js","mappings":";;;;;;AAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA,CAAC","sources":["webpack://team1676-apps/./app/views/js/custom/apps/projects/settings/settings.js"],"sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTProjectSettings = function () {\n\n    // Private functions\n    var handleForm = function () {\n        // Init Datepicker --- For more info, please check Flatpickr's official documentation: https://flatpickr.js.org/\n        $(\"#kt_datepicker_1\").flatpickr();\n\n        // Form validation\n        var validation;\n        var _form = document.getElementById('kt_project_settings_form');\n        var submitButton = _form.querySelector('#kt_project_settings_submit');\n\n        // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n        validation = FormValidation.formValidation(\n            _form,\n            {\n                fields: {\n                    name: {\n                        validators: {\n                            notEmpty: {\n                                message: 'Project name is required'\n                            }\n                        }\n                    },\n                    type: {\n                        validators: {\n                            notEmpty: {\n                                message: 'Project type is required'\n                            }\n                        }\n                    },\n                    description: {\n                        validators: {\n                            notEmpty: {\n                                message: 'Project Description is required'\n                            }\n                        }\n                    },\n                    date: {\n                        validators: {\n                            notEmpty: {\n                                message: 'Due Date is required'\n                            }\n                        }\n                    },\n                },\n                plugins: {\n                    trigger: new FormValidation.plugins.Trigger(),\n                    submitButton: new FormValidation.plugins.SubmitButton(),\n                    //defaultSubmit: new FormValidation.plugins.DefaultSubmit(), // Uncomment this line to enable normal button submit after form validation\n                    bootstrap: new FormValidation.plugins.Bootstrap5({\n                        rowSelector: '.fv-row'\n                    })\n                }\n            }\n        );\n\n        submitButton.addEventListener('click', function (e) {\n            e.preventDefault();\n\n            validation.validate().then(function (status) {\n                if (status == 'Valid') {\n\n                    swal.fire({\n                        text: \"Thank you! You've updated your project settings\",\n                        icon: \"success\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn fw-bold btn-light-primary\"\n                        }\n                    });\n\n                } else {\n                    swal.fire({\n                        text: \"Sorry, looks like there are some errors detected, please try again.\",\n                        icon: \"error\",\n                        buttonsStyling: false,\n                        confirmButtonText: \"Ok, got it!\",\n                        customClass: {\n                            confirmButton: \"btn fw-bold btn-light-primary\"\n                        }\n                    });\n                }\n            });\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            handleForm();\n        }\n    }\n}();\n\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTProjectSettings.init();\n});\n"],"names":[],"sourceRoot":""}