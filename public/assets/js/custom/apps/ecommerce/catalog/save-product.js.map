{"version":3,"file":"js/custom/apps/ecommerce/catalog/save-product.js","mappings":";;;;;;AAAa;;AAEb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC","sources":["webpack://team1676-apps/./frontend/js/custom/apps/ecommerce/catalog/save-product.js"],"sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTAppEcommerceSaveProduct = function () {\n\n    // Private functions\n\n    // Init quill editor\n    const initQuill = () => {\n        // Define all elements for quill editor\n        const elements = [\n            '#kt_ecommerce_add_product_description',\n            '#kt_ecommerce_add_product_meta_description'\n        ];\n\n        // Loop all elements\n        elements.forEach(element => {\n            // Get quill element\n            let quill = document.querySelector(element);\n\n            // Break if element not found\n            if (!quill) {\n                return;\n            }\n\n            // Init quill --- more info: https://quilljs.com/docs/quickstart/\n            quill = new Quill(element, {\n                modules: {\n                    toolbar: [\n                        [{\n                            header: [1, 2, false]\n                        }],\n                        ['bold', 'italic', 'underline'],\n                        ['image', 'code-block']\n                    ]\n                },\n                placeholder: 'Type your text here...',\n                theme: 'snow' // or 'bubble'\n            });\n        });\n    }\n\n    // Init tagify\n    const initTagify = () => {\n        // Define all elements for tagify\n        const elements = [\n            '#kt_ecommerce_add_product_category',\n            '#kt_ecommerce_add_product_tags'\n        ];\n\n        // Loop all elements\n        elements.forEach(element => {\n            // Get tagify element\n            const tagify = document.querySelector(element);\n\n            // Break if element not found\n            if (!tagify) {\n                return;\n            }\n\n            // Init tagify --- more info: https://yaireo.github.io/tagify/\n            new Tagify(tagify, {\n                whitelist: [\"new\", \"trending\", \"sale\", \"discounted\", \"selling fast\", \"last 10\"],\n                dropdown: {\n                    maxItems: 20,           // <- mixumum allowed rendered suggestions\n                    classname: \"tagify__inline__suggestions\", // <- custom classname for this dropdown, so it could be targeted\n                    enabled: 0,             // <- show suggestions on focus\n                    closeOnSelect: false    // <- do not hide the suggestions dropdown once an item has been selected\n                }\n            });\n        });\n    }\n\n    // Init form repeater --- more info: https://github.com/DubFriend/jquery.repeater\n    const initFormRepeater = () => {\n        $('#kt_ecommerce_add_product_options').repeater({\n            initEmpty: false,\n\n            defaultValues: {\n                'text-input': 'foo'\n            },\n\n            show: function () {\n                $(this).slideDown();\n\n                // Init select2 on new repeated items\n                initConditionsSelect2();\n            },\n\n            hide: function (deleteElement) {\n                $(this).slideUp(deleteElement);\n            }\n        });\n    }\n\n    // Init condition select2\n    const initConditionsSelect2 = () => {\n        // Tnit new repeating condition types\n        const allConditionTypes = document.querySelectorAll('[data-kt-ecommerce-catalog-add-product=\"product_option\"]');\n        allConditionTypes.forEach(type => {\n            if ($(type).hasClass(\"select2-hidden-accessible\")) {\n                return;\n            } else {\n                $(type).select2({\n                    minimumResultsForSearch: -1\n                });\n            }\n        });\n    }\n\n\n    // Init noUIslider\n    const initSlider = () => {\n        var slider = document.querySelector(\"#kt_ecommerce_add_product_discount_slider\");\n        var value = document.querySelector(\"#kt_ecommerce_add_product_discount_label\");\n\n        noUiSlider.create(slider, {\n            start: [10],\n            connect: true,\n            range: {\n                \"min\": 1,\n                \"max\": 100\n            }\n        });\n\n        slider.noUiSlider.on(\"update\", function (values, handle) {\n            value.innerHTML = Math.round(values[handle]);\n            if (handle) {\n                value.innerHTML = Math.round(values[handle]);\n            }\n        });\n    }\n\n    // Init DropzoneJS --- more info:\n    const initDropzone = () => {\n        var myDropzone = new Dropzone(\"#kt_ecommerce_add_product_media\", {\n            url: \"https://keenthemes.com/scripts/void.php\", // Set the url for your upload script location\n            paramName: \"file\", // The name that will be used to transfer the file\n            maxFiles: 10,\n            maxFilesize: 10, // MB\n            addRemoveLinks: true,\n            accept: function (file, done) {\n                if (file.name == \"wow.jpg\") {\n                    done(\"Naha, you don't.\");\n                } else {\n                    done();\n                }\n            }\n        });\n    }\n\n    // Handle discount options\n    const handleDiscount = () => {\n        const discountOptions = document.querySelectorAll('input[name=\"discount_option\"]');\n        const percentageEl = document.getElementById('kt_ecommerce_add_product_discount_percentage');\n        const fixedEl = document.getElementById('kt_ecommerce_add_product_discount_fixed');\n\n        discountOptions.forEach(option => {\n            option.addEventListener('change', e => {\n                const value = e.target.value;\n\n                switch (value) {\n                    case '2': {\n                        percentageEl.classList.remove('d-none');\n                        fixedEl.classList.add('d-none');\n                        break;\n                    }\n                    case '3': {\n                        percentageEl.classList.add('d-none');\n                        fixedEl.classList.remove('d-none');\n                        break;\n                    }\n                    default: {\n                        percentageEl.classList.add('d-none');\n                        fixedEl.classList.add('d-none');\n                        break;\n                    }\n                }\n            });\n        });\n    }\n\n    // Shipping option handler\n    const handleShipping = () => {\n        const shippingOption = document.getElementById('kt_ecommerce_add_product_shipping_checkbox');\n        const shippingForm = document.getElementById('kt_ecommerce_add_product_shipping');\n\n        shippingOption.addEventListener('change', e => {\n            const value = e.target.checked;\n\n            if (value) {\n                shippingForm.classList.remove('d-none');\n            } else {\n                shippingForm.classList.add('d-none');\n            }\n        });\n    }\n\n    // Category status handler\n    const handleStatus = () => {\n        const target = document.getElementById('kt_ecommerce_add_product_status');\n        const select = document.getElementById('kt_ecommerce_add_product_status_select');\n        const statusClasses = ['bg-success', 'bg-warning', 'bg-danger'];\n\n        $(select).on('change', function (e) {\n            const value = e.target.value;\n\n            switch (value) {\n                case \"published\": {\n                    target.classList.remove(...statusClasses);\n                    target.classList.add('bg-success');\n                    hideDatepicker();\n                    break;\n                }\n                case \"scheduled\": {\n                    target.classList.remove(...statusClasses);\n                    target.classList.add('bg-warning');\n                    showDatepicker();\n                    break;\n                }\n                case \"inactive\": {\n                    target.classList.remove(...statusClasses);\n                    target.classList.add('bg-danger');\n                    hideDatepicker();\n                    break;\n                }\n                case \"draft\": {\n                    target.classList.remove(...statusClasses);\n                    target.classList.add('bg-primary');\n                    hideDatepicker();\n                    break;\n                }\n                default:\n                    break;\n            }\n        });\n\n\n        // Handle datepicker\n        const datepicker = document.getElementById('kt_ecommerce_add_product_status_datepicker');\n\n        // Init flatpickr --- more info: https://flatpickr.js.org/\n        $('#kt_ecommerce_add_product_status_datepicker').flatpickr({\n            enableTime: true,\n            dateFormat: \"Y-m-d H:i\",\n        });\n\n        const showDatepicker = () => {\n            datepicker.parentNode.classList.remove('d-none');\n        }\n\n        const hideDatepicker = () => {\n            datepicker.parentNode.classList.add('d-none');\n        }\n    }\n\n    // Condition type handler\n    const handleConditions = () => {\n        const allConditions = document.querySelectorAll('[name=\"method\"][type=\"radio\"]');\n        const conditionMatch = document.querySelector('[data-kt-ecommerce-catalog-add-category=\"auto-options\"]');\n        allConditions.forEach(radio => {\n            radio.addEventListener('change', e => {\n                if (e.target.value === '1') {\n                    conditionMatch.classList.remove('d-none');\n                } else {\n                    conditionMatch.classList.add('d-none');\n                }\n            });\n        })\n    }\n\n    // Submit form handler\n    const handleSubmit = () => {\n        // Define variables\n        let validator;\n\n        // Get elements\n        const form = document.getElementById('kt_ecommerce_add_product_form');\n        const submitButton = document.getElementById('kt_ecommerce_add_product_submit');\n\n        // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n        validator = FormValidation.formValidation(\n            form,\n            {\n                fields: {\n                    'product_name': {\n                        validators: {\n                            notEmpty: {\n                                message: 'Product name is required'\n                            }\n                        }\n                    },\n                    'sku': {\n                        validators: {\n                            notEmpty: {\n                                message: 'SKU is required'\n                            }\n                        }\n                    },\n                    'sku': {\n                        validators: {\n                            notEmpty: {\n                                message: 'Product barcode is required'\n                            }\n                        }\n                    },\n                    'shelf': {\n                        validators: {\n                            notEmpty: {\n                                message: 'Shelf quantity is required'\n                            }\n                        }\n                    },\n                    'price': {\n                        validators: {\n                            notEmpty: {\n                                message: 'Product base price is required'\n                            }\n                        }\n                    },\n                    'tax': {\n                        validators: {\n                            notEmpty: {\n                                message: 'Product tax class is required'\n                            }\n                        }\n                    }\n                },\n                plugins: {\n                    trigger: new FormValidation.plugins.Trigger(),\n                    bootstrap: new FormValidation.plugins.Bootstrap5({\n                        rowSelector: '.fv-row',\n                        eleInvalidClass: '',\n                        eleValidClass: ''\n                    })\n                }\n            }\n        );\n\n        // Handle submit button\n        submitButton.addEventListener('click', e => {\n            e.preventDefault();\n\n            // Validate form before submit\n            if (validator) {\n                validator.validate().then(function (status) {\n                    console.log('validated!');\n\n                    if (status == 'Valid') {\n                        submitButton.setAttribute('data-kt-indicator', 'on');\n\n                        // Disable submit button whilst loading\n                        submitButton.disabled = true;\n\n                        setTimeout(function () {\n                            submitButton.removeAttribute('data-kt-indicator');\n\n                            Swal.fire({\n                                text: \"Form has been successfully submitted!\",\n                                icon: \"success\",\n                                buttonsStyling: false,\n                                confirmButtonText: \"Ok, got it!\",\n                                customClass: {\n                                    confirmButton: \"btn btn-primary\"\n                                }\n                            }).then(function (result) {\n                                if (result.isConfirmed) {\n                                    // Enable submit button after loading\n                                    submitButton.disabled = false;\n\n                                    // Redirect to customers list page\n                                    window.location = form.getAttribute(\"data-kt-redirect\");\n                                }\n                            });\n                        }, 2000);\n                    } else {\n                        Swal.fire({\n                            html: \"Sorry, looks like there are some errors detected, please try again. <br/><br/>Please note that there may be errors in the <strong>General</strong> or <strong>Advanced</strong> tabs\",\n                            icon: \"error\",\n                            buttonsStyling: false,\n                            confirmButtonText: \"Ok, got it!\",\n                            customClass: {\n                                confirmButton: \"btn btn-primary\"\n                            }\n                        });\n                    }\n                });\n            }\n        })\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            // Init forms\n            initQuill();\n            initTagify();\n            initSlider();\n            initFormRepeater();\n            initDropzone();\n            initConditionsSelect2();\n\n            // Handle forms\n            handleStatus();\n            handleConditions();\n            handleDiscount();\n            handleShipping();\n            handleSubmit();\n        }\n    };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTAppEcommerceSaveProduct.init();\n});\n"],"names":[],"sourceRoot":""}