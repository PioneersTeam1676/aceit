{"version":3,"file":"js/custom/utilities/modals/select-location.js","mappings":";;;;;;AAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,8BAA8B,EAAE,yBAAyB,EAAE,EAAE,EAAE,EAAE,EAAE;AACnE,iCAAiC;AACjC,SAAS;;AAET;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,mBAAmB,4DAA4D,oBAAoB;;AAE7I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC","sources":["webpack://team1676-apps/./app/views/js/custom/utilities/modals/select-location.js"],"sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTModalSelectLocation = function () {\n    // Private variables\n    var locationSelectTarget;\n    var locationSelectButton;\n\n    var modal;\n    var selectedlocation = '';\n    var mapInitialized = false;\n\n    // Private functions\n    var initMap = function() {\n        // Check if Leaflet is included\n        if (!L) {\n            return;\n        }\n\n        // Define Map Location\n        var leaflet = L.map('kt_modal_select_location_map', {\n            center: [40.725, -73.985],\n            zoom: 30\n        });\n\n        // Init Leaflet Map. For more info check the plugin's documentation: https://leafletjs.com/\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n            attribution: '&copy; <a href=\"https://osm.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(leaflet);\n\n        // Set Geocoding\n        var geocodeService;\n        if (typeof L.esri.Geocoding === 'undefined') {\n            geocodeService = L.esri.geocodeService();\n        } else {\n            geocodeService = L.esri.Geocoding.geocodeService();\n        }\n\n        // Define Marker Layer\n        var markerLayer = L.layerGroup().addTo(leaflet);\n\n        // Set Custom SVG icon marker\n        var leafletIcon = L.divIcon({\n            html: `<span class=\"svg-icon svg-icon-danger svg-icon-3x\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\"><g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect x=\"0\" y=\"24\" width=\"24\" height=\"0\"/><path d=\"M5,10.5 C5,6 8,3 12.5,3 C17,3 20,6.75 20,10.5 C20,12.8325623 17.8236613,16.03566 13.470984,20.1092932 C12.9154018,20.6292577 12.0585054,20.6508331 11.4774555,20.1594925 C7.15915182,16.5078313 5,13.2880005 5,10.5 Z M12.5,12 C13.8807119,12 15,10.8807119 15,9.5 C15,8.11928813 13.8807119,7 12.5,7 C11.1192881,7 10,8.11928813 10,9.5 C10,10.8807119 11.1192881,12 12.5,12 Z\" fill=\"#000000\" fill-rule=\"nonzero\"/></g></svg></span>`,\n            bgPos: [10, 10],\n            iconAnchor: [20, 37],\n            popupAnchor: [0, -37],\n            className: 'leaflet-marker'\n        });\n\n        // Map onClick Action\n        leaflet.on('click', function (e) {\n            geocodeService.reverse().latlng(e.latlng).run(function (error, result) {\n                if (error) {\n                    return;\n                }\n                markerLayer.clearLayers();\n                selectedlocation = result.address.Match_addr;\n                L.marker(result.latlng, { icon: leafletIcon }).addTo(markerLayer).bindPopup(result.address.Match_addr, { closeButton: false }).openPopup();\n\n                // Show popup confirmation. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n                Swal.fire({\n                    html: '<div class=\"mb-2\">Your selected - <b>\"' + selectedlocation + '\"</b>.</div>' + 'Click on the \"Apply\" button to select this location.',\n                    icon: \"success\",\n                    buttonsStyling: false,\n                    confirmButtonText: \"Ok, got it!\",\n                    customClass: {\n                        confirmButton: \"btn btn-primary\"\n                    }\n                }).then(function (result) {\n                    // Confirmed\n                });\n            });\n        });\n    }\n\n    var handleSelection = function() {\n        locationSelectButton.addEventListener('click', function() {\n            if (locationSelectTarget) {\n                if (locationSelectTarget.value) {\n                    locationSelectTarget.value = selectedlocation;\n                } else {\n                    locationSelectTarget.innerHTML = selectedlocation;\n                }\n            }\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            // Elements\n\t\t\tmodal = document.querySelector('#kt_modal_select_location');\n\n\t\t\tif (!modal) {\n\t\t\t\treturn;\n\t\t\t}\n            \n            locationSelectTarget = document.querySelector('#kt_modal_select_location_target');\n            locationSelectButton = document.querySelector('#kt_modal_select_location_button');\n\n            handleSelection();\n            \n            modal.addEventListener('shown.bs.modal', function () {\n                if (!mapInitialized) {\n                    initMap();\n                    mapInitialized = true;\n                }                \n            });\n        }\n    }\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTModalSelectLocation.init();\n});\n"],"names":[],"sourceRoot":""}