{"version":3,"file":"js/custom/widgets.js","mappings":";;;;;;AAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,+BAA+B;AAC/B;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC,E","sources":["webpack://team1676-apps/./frontend/js/custom/widgets.js"],"sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTWidgets = function () {\n    // Chart widgets based on Apexcharts. For more info check the official documentation:  https://apexcharts.com/\n    var initWidget2 = function() {\n        var chart = {\n            self: null,\n            rendered: false\n        };\n\n        var init = function() {\n            var element = document.getElementById(\"kt_chart_widget_2_chart\");\n            var height = parseInt(KTUtil.css(element, 'height'));\n\n            if (!element) {\n                return;\n            }\n\n            var options = {\n                labels: [\"Total Members\"],\n                series: [74],\n                chart: {\n                    fontFamily: 'inherit',\n                    height: height,\n                    type: 'radialBar',\n                    offsetY: 0\n                },\n                plotOptions: {\n                    radialBar: {\n                        startAngle: -90,\n                        endAngle: 90,\n    \n                        hollow: {\n                            margin: 0,\n                            size: \"70%\"\n                        },\n                        dataLabels: {\n                            showOn: \"always\",\n                            name: {\n                                show: true,\n                                fontSize: \"13px\",\n                                fontWeight: \"700\",\n                                offsetY: -5,\n                                color: KTUtil.getCssVariableValue('--bs-gray-500')\n                            },\n                            value: {\n                                color: KTUtil.getCssVariableValue('--bs-gray-700'),\n                                fontSize: \"30px\",\n                                fontWeight: \"700\",\n                                offsetY: -40,\n                                show: true\n                            }\n                        },\n                        track: {\n                            background: KTUtil.getCssVariableValue('--bs-light-primary'),\n                            strokeWidth: '100%'\n                        }\n                    }\n                },\n                colors: [KTUtil.getCssVariableValue('--bs-primary')],\n                stroke: {\n                    lineCap: \"round\",\n                }            \n            };\n    \n            chart.self = new ApexCharts(element, options);\n\n            // Set timeout to properly get the parent elements width\n            setTimeout(function() {\n                chart.self.render();\n                chart.rendered = true;\n            }, 200); \n        }\n\n        init();\n\n        // Update chart on theme mode change\n        KTThemeMode.on(\"kt.thememode.change\", function() {                \n            if (chart.rendered) {\n                chart.self.destroy();\n            }\n\n            init();\n        });\n    }      \n    \n    var initWidget11 = function() {\n        var btn = document.querySelector('#kt_widget_11_load_more_btn');\n        var widget5 = document.querySelector('#kt_widget_11');\n\n        if (btn) {\n            btn.addEventListener('click', function(e){\n                e.preventDefault();\n                btn.setAttribute('data-kt-indicator', 'on');\n\n                setTimeout(function() {\n                    btn.removeAttribute('data-kt-indicator');\n                    widget5.classList.remove('d-none');         \n                    btn.classList.add('d-none');         \n                    \n                    KTUtil.scrollTo(widget5, 200);\n                }, 2000);                \n            });\n        }                 \n    }\n\n    var initWidget17 = function() {\n        var charts = document.querySelectorAll('.widget-17-chart');\n\n        [].slice.call(charts).map(function(element) {\n            var height = parseInt(KTUtil.css(element, 'height'));\n\n            if ( !element ) {\n                return;\n            }\n\n            var color = element.getAttribute('data-kt-chart-color');\n\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\n            var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'gray-300');\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n            var lightColor = KTUtil.getCssVariableValue('--bs-light-' + color );\n\n            var options = {\n                series: [{\n                    name: 'Net Profit',\n                    data: [30, 30, 60, 25, 25, 40]\n                }],\n                chart: {\n                    fontFamily: 'inherit',\n                    type: 'area',\n                    height: height,\n                    toolbar: {\n                        show: false\n                    },\n                    zoom: {\n                        enabled: false\n                    },\n                    sparkline: {\n                        enabled: true\n                    }\n                },\n                plotOptions: {},\n                legend: {\n                    show: false\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                fill: {\n                    type: 'solid',\n                    opacity: 1\n                },\n                fill1: {\n                    type: 'gradient',\n                    opacity: 1,\n                    gradient: {\n                        type: \"vertical\",\n                        shadeIntensity: 0.5,\n                        gradientToColors: undefined,\n                        inverseColors: true,\n                        opacityFrom: 1,\n                        opacityTo: 0.375,\n                        stops: [25, 50, 100],\n                        colorStops: []\n                    }\n                },\n                stroke: {\n                    curve: 'smooth',\n                    show: true,\n                    width: 3,\n                    colors: [baseColor]\n                },\n                xaxis: {\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n                    axisBorder: {\n                        show: false,\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    },\n                    crosshairs: {\n                        show: false,\n                        position: 'front',\n                        stroke: {\n                            color: strokeColor,\n                            width: 1,\n                            dashArray: 3\n                        }\n                    },\n                    tooltip: {\n                        enabled: true,\n                        formatter: undefined,\n                        offsetY: 0,\n                        style: {\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                yaxis: {\n                    min: 0,\n                    max: 65,\n                    labels: {\n                        show: false,\n                        style: {\n                            colors: labelColor,\n                            fontSize: '12px'\n                        }\n                    }\n                },\n                states: {\n                    normal: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    hover: {\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    },\n                    active: {\n                        allowMultipleDataPointsSelection: false,\n                        filter: {\n                            type: 'none',\n                            value: 0\n                        }\n                    }\n                },\n                tooltip: {\n                    style: {\n                        fontSize: '12px'\n                    },\n                    y: {\n                        formatter: function (val) {\n                            return \"$\" + val + \" thousands\"\n                        }\n                    }\n                },\n                colors: [lightColor],\n                markers: {\n                    colors: [lightColor],\n                    strokeColor: [baseColor],\n                    strokeWidth: 3\n                }\n            };\n\n            var chart = new ApexCharts(element, options);\n            chart.render();\n        });        \n    }\n\n    // Follow button\n    var initUserFollowButton = function() {\n        var follow = document.querySelector('#kt_user_follow_button');\n\n        if (follow) {\n            follow.addEventListener('click', function(e){\n                // Prevent default action \n                e.preventDefault();\n                \n                // Show indicator\n                follow.setAttribute('data-kt-indicator', 'on');\n                \n                // Disable button to avoid multiple click \n\t\t\t\tfollow.disabled = true;\n\n                // Check button state\n                if (follow.classList.contains(\"btn-success\")) {\n                     setTimeout(function() {\n                        follow.removeAttribute('data-kt-indicator');\n                        follow.classList.remove(\"btn-success\");\n                        follow.classList.add(\"btn-light\");\n                        follow.querySelector(\".svg-icon\").classList.add(\"d-none\");\n                        follow.querySelector(\".indicator-label\").innerHTML = 'Follow';\n\t\t\t\t        follow.disabled = false;\n                    }, 1500);   \n                } else {\n                     setTimeout(function() {\n                        follow.removeAttribute('data-kt-indicator');\n                        follow.classList.add(\"btn-success\");\n                        follow.classList.remove(\"btn-light\");\n                        follow.querySelector(\".svg-icon\").classList.remove(\"d-none\");\n                        follow.querySelector(\".indicator-label\").innerHTML = 'Following';\n                        follow.disabled = false;\n                    }, 1000);   \n                }        \n            });\n        }                 \n    }\n     \n    // Public methods\n    return {\n        init: function () {\n            initWidget2();              \n            initWidget11();\n            initWidget17();\n\n            initUserFollowButton();\n        }\n    }\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTWidgets.init();\n});"],"names":[],"sourceRoot":""}