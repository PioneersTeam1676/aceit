{"version":3,"file":"js/custom/documentation/charts/flotcharts/basic.js","mappings":";;;;;;AAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,iBAAiB;AACzC;;AAEA;AACA,wBAAwB,iBAAiB;AACzC;;AAEA;AACA,wBAAwB,iBAAiB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC","sources":["webpack://team1676-apps/./frontend/js/custom/documentation/charts/flotcharts/basic.js"],"sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTFlotDemoBasic = function () {\n    // Private functions\n    var exampleBasic = function () {\n        var data = [];\n        var totalPoints = 250;\n\n        // random data generator for plot charts\n\n        function getRandomData() {\n            if (data.length > 0) data = data.slice(1);\n            // do a random walk\n            while (data.length < totalPoints) {\n                var prev = data.length > 0 ? data[data.length - 1] : 50;\n                var y = prev + Math.random() * 10 - 5;\n                if (y < 0) y = 0;\n                if (y > 100) y = 100;\n                data.push(y);\n            }\n            // zip the generated y values with the x values\n            var res = [];\n            for (var i = 0; i < data.length; ++i) {\n                res.push([i, data[i]]);\n            }\n\n            return res;\n        }\n\n        var d1 = [];\n        for (var i = 0; i < Math.PI * 2; i += 0.25)\n            d1.push([i, Math.sin(i)]);\n\n        var d2 = [];\n        for (var i = 0; i < Math.PI * 2; i += 0.25)\n            d2.push([i, Math.cos(i)]);\n\n        var d3 = [];\n        for (var i = 0; i < Math.PI * 2; i += 0.1)\n            d3.push([i, Math.tan(i)]);\n\n        $.plot($(\"#kt_docs_flot_basic\"), [{\n            label: \"sin(x)\",\n            data: d1,\n            lines: {\n                lineWidth: 1,\n            },\n            shadowSize: 0\n        }, {\n            label: \"cos(x)\",\n            data: d2,\n            lines: {\n                lineWidth: 1,\n            },\n            shadowSize: 0\n        }, {\n            label: \"tan(x)\",\n            data: d3,\n            lines: {\n                lineWidth: 1,\n            },\n            shadowSize: 0\n        }], {\n            colors: [KTUtil.getCssVariableValue('--kt-active-success'), KTUtil.getCssVariableValue('--kt-active-primary'), KTUtil.getCssVariableValue('--kt-active-danger')],\n            series: {\n                lines: {\n                    show: true,\n                },\n                points: {\n                    show: true,\n                    fill: true,\n                    radius: 3,\n                    lineWidth: 1\n                }\n            },\n            xaxis: {\n                tickColor: KTUtil.getCssVariableValue('--kt-light-dark'),\n                ticks: [0, [Math.PI / 2, \"\\u03c0/2\"],\n                    [Math.PI, \"\\u03c0\"],\n                    [Math.PI * 3 / 2, \"3\\u03c0/2\"],\n                    [Math.PI * 2, \"2\\u03c0\"]\n                ]\n            },\n            yaxis: {\n                tickColor: KTUtil.getCssVariableValue('--kt-light-dark'),\n                ticks: 10,\n                min: -2,\n                max: 2\n            },\n            grid: {\n                borderColor: KTUtil.getCssVariableValue('--kt-light-dark'),\n                borderWidth: 1\n            }\n        });\n    }\n\n    return {\n        // Public Functions\n        init: function () {\n            exampleBasic();\n        }\n    };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTFlotDemoBasic.init();\n});\n"],"names":[],"sourceRoot":""}