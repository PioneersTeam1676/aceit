{"version":3,"file":"js/custom/documentation/charts/flotcharts/tracking.js","mappings":";;;;;;AAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,eAAe,oBAAoB;AACnC;;AAEA;AACA,gBAAgB,wBAAwB;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC","sources":["webpack://team1676-apps/./app/views/js/custom/documentation/charts/flotcharts/tracking.js"],"sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTFlotDemoTracking = function () {\n    // Private functions\n    var exampleTracking = function () {\n        var sin = [],\n\t\t\tcos = [];\n\t\tfor (var i = 0; i < 14; i += 0.1) {\n\t\t\tsin.push([i, Math.sin(i)]);\n\t\t\tcos.push([i, Math.cos(i)]);\n\t\t}\n\n\t\tvar plot = $.plot($(\"#kt_docs_flot_tracking\"), [{\n\t\t\tdata: sin,\n\t\t\tlabel: \"sin(x) = -0.00\",\n\t\t\tlines: {\n\t\t\t\tlineWidth: 1,\n\t\t\t},\n\t\t\tshadowSize: 0\n\t\t}, {\n\t\t\tdata: cos,\n\t\t\tlabel: \"cos(x) = -0.00\",\n\t\t\tlines: {\n\t\t\t\tlineWidth: 1,\n\t\t\t},\n\t\t\tshadowSize: 0\n\t\t}], {\n\t\t\tcolors: [KTUtil.getCssVariableValue('--kt-active-primary'), KTUtil.getCssVariableValue('--kt-active-warning')],\n\t\t\tseries: {\n\t\t\t\tlines: {\n\t\t\t\t\tshow: true\n\t\t\t\t}\n\t\t\t},\n\t\t\tcrosshair: {\n\t\t\t\tmode: \"x\"\n\t\t\t},\n\t\t\tgrid: {\n\t\t\t\thoverable: true,\n\t\t\t\tautoHighlight: false,\n\t\t\t\ttickColor: KTUtil.getCssVariableValue('--kt-light-dark'),\n\t\t\t\tborderColor: KTUtil.getCssVariableValue('--kt-light-dark'),\n\t\t\t\tborderWidth: 1\n\t\t\t},\n\t\t\tyaxis: {\n\t\t\t\tmin: -1.2,\n\t\t\t\tmax: 1.2\n\t\t\t}\n\t\t});\n\n\t\tvar legends = $(\"#kt_docs_flot_tracking .legendLabel\");\n\t\tlegends.each(function() {\n\t\t\t// fix the widths so they don't jump around\n\t\t\t$(this).css('width', $(this).width());\n\t\t});\n\n\t\tvar updateLegendTimeout = null;\n\t\tvar latestPosition = null;\n\n\t\tfunction updateLegend() {\n\t\t\tupdateLegendTimeout = null;\n\n\t\t\tvar pos = latestPosition;\n\n\t\t\tvar axes = plot.getAxes();\n\t\t\tif (pos.x < axes.xaxis.min || pos.x > axes.xaxis.max || pos.y < axes.yaxis.min || pos.y > axes.yaxis.max) return;\n\n\t\t\tvar i, j, dataset = plot.getData();\n\t\t\tfor (i = 0; i < dataset.length; ++i) {\n\t\t\t\tvar series = dataset[i];\n\n\t\t\t\t// find the nearest points, x-wise\n\t\t\t\tfor (j = 0; j < series.data.length; ++j)\n\t\t\t\t\tif (series.data[j][0] > pos.x) break;\n\n\t\t\t\t// now interpolate\n\t\t\t\tvar y, p1 = series.data[j - 1],\n\t\t\t\t\tp2 = series.data[j];\n\n\t\t\t\tif (p1 == null) y = p2[1];\n\t\t\t\telse if (p2 == null) y = p1[1];\n\t\t\t\telse y = p1[1] + (p2[1] - p1[1]) * (pos.x - p1[0]) / (p2[0] - p1[0]);\n\n\t\t\t\tlegends.eq(i).text(series.label.replace(/=.*/, \"= \" + y.toFixed(2)));\n\t\t\t}\n\t\t}\n\n\t\t$(\"#kt_docs_flot_tracking\").bind(\"plothover\", function(event, pos, item) {\n\t\t\tlatestPosition = pos;\n\t\t\tif (!updateLegendTimeout) updateLegendTimeout = setTimeout(updateLegend, 50);\n\t\t});\n    }\n\n    return {\n        // Public Functions\n        init: function () {\n            exampleTracking();\n        }\n    };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTFlotDemoTracking.init();\n});\n"],"names":[],"sourceRoot":""}