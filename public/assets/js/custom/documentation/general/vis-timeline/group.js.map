{"version":3,"file":"js/custom/documentation/general/vis-timeline/group.js","mappings":";;;;;;AAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;;AAEA,wBAAwB,WAAW;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC","sources":["webpack://team1676-apps/./frontend/js/custom/documentation/general/vis-timeline/group.js"],"sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTVisTimelineGroup = function () {\n    // Private functions\n    var exampleGroup = function () {\n        var now = Date.now();\n\n        var options = {\n            stack: true,\n            maxHeight: 640,\n            horizontalScroll: false,\n            verticalScroll: true,\n            zoomKey: \"ctrlKey\",\n            start: Date.now() - 1000 * 60 * 60 * 24 * 3, // minus 3 days\n            end: Date.now() + 1000 * 60 * 60 * 24 * 21, // plus 1 months aprox.\n            orientation: {\n                axis: \"both\",\n                item: \"top\",\n            },\n        };\n        var groups = new vis.DataSet();\n        var items = new vis.DataSet();\n\n        var count = 300;\n\n        for (var i = 0; i < count; i++) {\n            var start = now + 1000 * 60 * 60 * 24 * (i + Math.floor(Math.random() * 7));\n            var end = start + 1000 * 60 * 60 * 24 * (1 + Math.floor(Math.random() * 5));\n\n            groups.add({\n                id: i,\n                content: \"Task \" + i,\n                order: i,\n            });\n\n            items.add({\n                id: i,\n                group: i,\n                start: start,\n                end: end,\n                type: \"range\",\n                content: \"Item \" + i,\n            });\n        }\n\n        // create a Timeline\n        var container = document.getElementById(\"kt_docs_vistimeline_group\");\n        var timeline = new vis.Timeline(container, items, groups, options);\n        //timeline = new vis.Timeline(container, null, options);\n        timeline.setGroups(groups);\n        timeline.setItems(items);\n\n        function debounce(func, wait = 100) {\n            let timeout;\n            return function (...args) {\n                clearTimeout(timeout);\n                timeout = setTimeout(() => {\n                    func.apply(this, args);\n                }, wait);\n            };\n        }\n\n        let groupFocus = (e) => {\n            let vGroups = timeline.getVisibleGroups();\n            let vItems = vGroups.reduce((res, groupId) => {\n                let group = timeline.itemSet.groups[groupId];\n                if (group.items) {\n                    res = res.concat(Object.keys(group.items));\n                }\n                return res;\n            }, []);\n            timeline.focus(vItems);\n        };\n        timeline.on(\"scroll\", debounce(groupFocus, 200));\n        // Enabling the next line leads to a continuous since calling focus might scroll vertically even if it shouldn't\n        // this.timeline.on(\"scrollSide\", debounce(groupFocus, 200))        \n\n        // Handle button click\n        const button = document.getElementById('kt_docs_vistimeline_group_button');\n        button.addEventListener('click', e => {\n            e.preventDefault();\n\n            var a = timeline.getVisibleGroups();\n            document.getElementById(\"visibleGroupsContainer\").innerHTML = \"\";\n            document.getElementById(\"visibleGroupsContainer\").innerHTML += a;\n        });\n    }\n\n    return {\n        // Public Functions\n        init: function () {\n            exampleGroup();\n        }\n    };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTVisTimelineGroup.init();\n});\n"],"names":[],"sourceRoot":""}