{"version":3,"file":"js/custom/documentation/general/draggable/restricted.js","mappings":";;;;;;AAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC","sources":["webpack://team1676-apps/./frontend/js/custom/documentation/general/draggable/restricted.js"],"sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTDraggableRestricted = function () {\n    // Private functions\n    var exampleRestricted = function () {\n        var containers = document.querySelectorAll('.draggable-zone');\n        const restrcitedWrapper = document.querySelector('[data-kt-draggable-level=\"restricted\"]');\n\n        if (containers.length === 0) {\n            return false;\n        }\n\n        var droppable = new Droppable.default(containers, {\n            draggable: '.draggable',\n            dropzone: '.draggable-zone',\n            handle: '.draggable .draggable-handle',\n            mirror: {\n                //appendTo: selector,\n                appendTo: 'body',\n                constrainDimensions: true\n            }\n        });\n\n        // Define draggable element variable for permissions level\n        let droppableOrigin;\n\n        // Handle drag start event -- more info: https://shopify.github.io/draggable/docs/class/src/Draggable/DragEvent/DragEvent.js~DragEvent.html\n        droppable.on('drag:start', (e) => {\n            droppableOrigin = e.originalSource.getAttribute('data-kt-draggable-level');\n        });\n\n        // Handle drag over event -- more info: https://shopify.github.io/draggable/docs/class/src/Draggable/DragEvent/DragEvent.js~DragOverEvent.html\n        droppable.on('drag:over', (e) => {\n            const isRestricted = e.overContainer.closest('[data-kt-draggable-level=\"restricted\"]');\n            if (isRestricted) {\n                if (droppableOrigin !== 'admin') {\n                    restrcitedWrapper.classList.add('bg-light-danger');\n                } else {\n                    restrcitedWrapper.classList.remove('bg-light-danger');\n                }\n            } else {\n                restrcitedWrapper.classList.remove('bg-light-danger');\n            }\n        });\n\n        // Handle drag stop event -- more info: https://shopify.github.io/draggable/docs/class/src/Draggable/DragEvent/DragEvent.js~DragStopEvent.html\n        droppable.on('drag:stop', (e) => {\n            // remove all draggable occupied limit\n            containers.forEach(c => {\n                c.classList.remove('draggable-dropzone--occupied');\n            });\n\n            // Remove restricted alert\n            restrcitedWrapper.classList.remove('bg-light-danger');\n        });\n\n        // Handle drop event -- https://shopify.github.io/draggable/docs/class/src/Droppable/DroppableEvent/DroppableEvent.js~DroppableDroppedEvent.html\n        droppable.on('droppable:dropped', (e) => {\n            const isRestricted = e.dropzone.closest('[data-kt-draggable-level=\"restricted\"]');\n            // Detect if drop container is restricted\n            if (isRestricted) {\n                // Check if dragged element has permission level\n                if (droppableOrigin !== 'admin') {\n                    restrcitedWrapper.classList.add('bg-light-danger');\n                    e.cancel();\n                }\n            }\n        });\n    }\n\n    return {\n        // Public Functions\n        init: function () {\n            exampleRestricted();\n        }\n    };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTDraggableRestricted.init();\n});\n"],"names":[],"sourceRoot":""}