{"version":3,"file":"js/custom/documentation/general/toastr.js","mappings":";;;;;;AAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;;AAEA,+DAA+D;AAC/D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,2CAA2C,aAAa;AACxD,iBAAiB;AACjB;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC","sources":["webpack://team1676-apps/./frontend/js/custom/documentation/general/toastr.js"],"sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTGeneralToastr = function() {\n    // Private functions\n    var example1 = function() {\n        var i = -1;\n        var toastCount = 0;\n        var $toastlast;\n\n        var getMessage = function () {\n            var msgs = [\n                'New order has been placed!',\n                'Are you the six fingered man?',\n                'Inconceivable!',\n                'I do not think that means what you think it means.',\n                'Have fun storming the castle!'\n            ];\n            i++;\n            if (i === msgs.length) {\n                i = 0;\n            }\n\n            return msgs[i];\n        };\n\n        var getMessageWithClearButton = function (msg) {\n            msg = msg ? msg : 'Clear itself?';\n            msg += '<br /><br /><button type=\"button\" class=\"btn btn-outline-light btn-sm\">Yes</button>';\n            return msg;\n        };\n\n        $('#showtoast').on('click', function () {\n            var shortCutFunction = $(\"#toastTypeGroup input:radio:checked\").val();\n            var msg = $('#message').val();\n            var title = $('#title').val() || '';\n            var $showDuration = $('#showDuration');\n            var $hideDuration = $('#hideDuration');\n            var $timeOut = $('#timeOut');\n            var $extendedTimeOut = $('#extendedTimeOut');\n            var $showEasing = $('#showEasing');\n            var $hideEasing = $('#hideEasing');\n            var $showMethod = $('#showMethod');\n            var $hideMethod = $('#hideMethod');\n            var toastIndex = toastCount++;\n            var addClear = $('#addClear').prop('checked');\n\n            toastr.options = {\n                closeButton: $('#closeButton').prop('checked'),\n                debug: $('#debugInfo').prop('checked'),\n                newestOnTop: $('#newestOnTop').prop('checked'),\n                progressBar: $('#progressBar').prop('checked'),\n                positionClass: $('#positionGroup input:radio:checked').val() || 'toast-top-right',\n                preventDuplicates: $('#preventDuplicates').prop('checked'),\n                onclick: null\n            };\n\n            if ($('#addBehaviorOnToastClick').prop('checked')) {\n                toastr.options.onclick = function () {\n                    alert('You can perform some custom action after a toast goes away');\n                };\n            }\n\n            if ($showDuration.val().length) {\n                toastr.options.showDuration = $showDuration.val();\n            }\n\n            if ($hideDuration.val().length) {\n                toastr.options.hideDuration = $hideDuration.val();\n            }\n\n            if ($timeOut.val().length) {\n                toastr.options.timeOut = addClear ? 0 : $timeOut.val();\n            }\n\n            if ($extendedTimeOut.val().length) {\n                toastr.options.extendedTimeOut = addClear ? 0 : $extendedTimeOut.val();\n            }\n\n            if ($showEasing.val().length) {\n                toastr.options.showEasing = $showEasing.val();\n            }\n\n            if ($hideEasing.val().length) {\n                toastr.options.hideEasing = $hideEasing.val();\n            }\n\n            if ($showMethod.val().length) {\n                toastr.options.showMethod = $showMethod.val();\n            }\n\n            if ($hideMethod.val().length) {\n                toastr.options.hideMethod = $hideMethod.val();\n            }\n\n            if (addClear) {\n                msg = getMessageWithClearButton(msg);\n                toastr.options.tapToDismiss = false;\n            }\n            if (!msg) {\n                msg = getMessage();\n            }\n\n            $('#toastrOptions').text(\n                    'toastr.options = '\n                    + JSON.stringify(toastr.options, null, 2)\n                    + ';'\n                    + '\\n\\ntoastr.'\n                    + shortCutFunction\n                    + '(\"'\n                    + msg\n                    + (title ? '\", \"' + title : '')\n                    + '\");'\n            );\n\n            var $toast = toastr[shortCutFunction](msg, title); // Wire up an event handler to a button in the toast, if it exists\n            $toastlast = $toast;\n\n            if(typeof $toast === 'undefined'){\n                return;\n            }\n\n            if ($toast.find('#okBtn').length) {\n                $toast.delegate('#okBtn', 'click', function () {\n                    alert('you clicked me. i was toast #' + toastIndex + '. goodbye!');\n                    $toast.remove();\n                });\n            }\n            if ($toast.find('#surpriseBtn').length) {\n                $toast.delegate('#surpriseBtn', 'click', function () {\n                    alert('Surprise! you clicked me. i was toast #' + toastIndex + '. You could perform an action here.');\n                });\n            }\n            if ($toast.find('.clear').length) {\n                $toast.delegate('.clear', 'click', function () {\n                    toastr.clear($toast, { force: true });\n                });\n            }\n        });\n\n        function getLastToast(){\n            return $toastlast;\n        }\n        $('#clearlasttoast').on('click', function () {\n            toastr.clear(getLastToast());\n        });\n        $('#cleartoasts').on('click', function () {\n            toastr.clear();\n        });\n    }\n\n    return {\n        // Public Functions\n        init: function() {\n            example1();\n        }\n    };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTGeneralToastr.init();\n});\n"],"names":[],"sourceRoot":""}