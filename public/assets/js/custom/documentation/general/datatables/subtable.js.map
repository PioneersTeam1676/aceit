{"version":3,"file":"js/custom/documentation/general/datatables/subtable.js","mappings":";;;;;;;;;;AAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uFAAuF;;AAEvF;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8BAA8B;AAChD,kBAAkB,8BAA8B;AAChD;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gCAAgC,qBAAqB;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;UCxPD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://team1676-apps/./frontend/js/custom/documentation/general/datatables/subtable.js","webpack://team1676-apps/webpack/bootstrap","webpack://team1676-apps/webpack/before-startup","webpack://team1676-apps/webpack/startup","webpack://team1676-apps/webpack/after-startup"],"sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTDocsDatatableSubtable = function () {\n    var table;\n    var datatable;\n    var template;\n\n    // Private methods\n    const initDatatable = () => {\n        // Set date data order\n        const tableRows = table.querySelectorAll('tbody tr');\n\n        tableRows.forEach(row => {\n            const dateRow = row.querySelectorAll('td');\n            const realDate = moment(dateRow[1].innerHTML, \"DD MMM YYYY, LT\").format(); // select date from 2nd column in table\n\n            // Skip template\n            if (!row.closest('[data-kt-docs-datatable-subtable=\"subtable_template\"]')) {\n                dateRow[1].setAttribute('data-order', realDate);\n                dateRow[1].innerText = moment(realDate).fromNow();\n            }\n        });\n\n        // Get subtable template\n        const subtable = document.querySelector('[data-kt-docs-datatable-subtable=\"subtable_template\"]');\n        template = subtable.cloneNode(true);\n        template.classList.remove('d-none');\n\n        // Remove subtable template\n        subtable.parentNode.removeChild(subtable);\n\n        // Init datatable --- more info on datatables: https://datatables.net/manual/\n        datatable = $(table).DataTable({\n            \"info\": false,\n            'order': [],\n            \"lengthChange\": false,\n            'pageLength': 6,\n            'ordering': false,\n            'paging': false,\n            'columnDefs': [\n                { orderable: false, targets: 0 }, // Disable ordering on column 0 (checkbox)\n                { orderable: false, targets: 6 }, // Disable ordering on column 6 (actions)\n            ]\n        });\n\n        // Re-init functions on every table re-draw -- more info: https://datatables.net/reference/event/draw\n        datatable.on('draw', function () {\n            resetSubtable();\n            handleActionButton();\n        });\n    }\n\n    // Subtable data sample\n    const data = [\n        {\n            image: '76',\n            name: 'Go Pro 8',\n            description: 'Latest  version of Go Pro.',\n            cost: '500.00',\n            qty: '1',\n            total: '500.00',\n            stock: '12'\n        },\n        {\n            image: '60',\n            name: 'Bose Earbuds',\n            description: 'Top quality earbuds from Bose.',\n            cost: '300.00',\n            qty: '1',\n            total: '300.00',\n            stock: '8'\n        },\n        {\n            image: '211',\n            name: 'Dry-fit Sports T-shirt',\n            description: 'Comfortable sportswear for everyday use.',\n            cost: '89.00',\n            qty: '1',\n            total: '89.00',\n            stock: '18'\n        },\n        {\n            image: '21',\n            name: 'Apple Airpod 3',\n            description: 'Apple\\'s latest and most advanced earbuds.',\n            cost: '200.00',\n            qty: '2',\n            total: '400.00',\n            stock: '32'\n        },\n        {\n            image: '83',\n            name: 'Nike Pumps',\n            description: 'Apple\\'s latest and most advanced headphones.',\n            cost: '200.00',\n            qty: '1',\n            total: '200.00',\n            stock: '8'\n        }\n    ];\n\n    // Handle action button\n    const handleActionButton = () => {\n        const buttons = document.querySelectorAll('[data-kt-docs-datatable-subtable=\"expand_row\"]');\n\n        // Sample row items counter --- for demo purpose only, remove this variable in your project\n        const rowItems = [4, 1, 5, 1, 4, 2];\n\n        buttons.forEach((button, index) => {\n            button.addEventListener('click', e => {\n                e.stopImmediatePropagation();\n                e.preventDefault();\n\n                const row = button.closest('tr');\n                const rowClasses = ['isOpen', 'border-bottom-0'];\n\n                // Get total number of items to generate --- for demo purpose only, remove this code snippet in your project\n                const demoData = [];\n                for (var j = 0; j < rowItems[index]; j++) {\n                    demoData.push(data[j]);\n                }\n                // End of generating demo data\n\n                // Handle subtable expanded state\n                if (row.classList.contains('isOpen')) {\n                    // Remove all subtables from current order row\n                    while (row.nextSibling && row.nextSibling.getAttribute('data-kt-docs-datatable-subtable') === 'subtable_template') {\n                        row.nextSibling.parentNode.removeChild(row.nextSibling);\n                    }\n                    row.classList.remove(...rowClasses);\n                    button.classList.remove('active');\n                } else {\n                    populateTemplate(demoData, row);\n                    row.classList.add(...rowClasses);\n                    button.classList.add('active');\n                }\n            });\n        });\n    }\n\n    // Populate template with content/data -- content/data can be replaced with relevant data from database or API\n    const populateTemplate = (data, target) => {\n        data.forEach((d, index) => {\n            // Clone template node\n            const newTemplate = template.cloneNode(true);\n\n            // Stock badges\n            const lowStock = `<div class=\"badge badge-light-warning\">Low Stock</div>`;\n            const inStock = `<div class=\"badge badge-light-success\">In Stock</div>`;\n\n            // Select data elements\n            const image = newTemplate.querySelector('[data-kt-docs-datatable-subtable=\"template_image\"]');\n            const name = newTemplate.querySelector('[data-kt-docs-datatable-subtable=\"template_name\"]');\n            const description = newTemplate.querySelector('[data-kt-docs-datatable-subtable=\"template_description\"]');\n            const cost = newTemplate.querySelector('[data-kt-docs-datatable-subtable=\"template_cost\"]');\n            const qty = newTemplate.querySelector('[data-kt-docs-datatable-subtable=\"template_qty\"]');\n            const total = newTemplate.querySelector('[data-kt-docs-datatable-subtable=\"template_total\"]');\n            const stock = newTemplate.querySelector('[data-kt-docs-datatable-subtable=\"template_stock\"]');\n\n            // Populate elements with data\n            const imageSrc = image.getAttribute('src');\n            image.setAttribute('src', imageSrc + d.image + '.gif');\n            name.innerText = d.name;\n            description.innerText = d.description;\n            cost.innerText = d.cost;\n            qty.innerText = d.qty;\n            total.innerText = d.total;\n            if (d.stock > 10) {\n                stock.innerHTML = inStock;\n            } else {\n                stock.innerHTML = lowStock;\n            }\n\n            // New template border controller\n            // When only 1 row is available\n            if (data.length === 1) {\n                let borderClasses = ['rounded', 'rounded-end-0'];\n                newTemplate.querySelectorAll('td')[0].classList.add(...borderClasses);\n                borderClasses = ['rounded', 'rounded-start-0'];\n                newTemplate.querySelectorAll('td')[4].classList.add(...borderClasses);\n\n                // Remove bottom border\n                newTemplate.classList.add('border-bottom-0');\n            } else {\n                // When multiple rows detected\n                if (index === (data.length - 1)) { // first row\n                    let borderClasses = ['rounded-start', 'rounded-bottom-0'];\n                    newTemplate.querySelectorAll('td')[0].classList.add(...borderClasses);\n                    borderClasses = ['rounded-end', 'rounded-bottom-0'];\n                    newTemplate.querySelectorAll('td')[4].classList.add(...borderClasses);\n                }\n                if (index === 0) { // last row\n                    let borderClasses = ['rounded-start', 'rounded-top-0'];\n                    newTemplate.querySelectorAll('td')[0].classList.add(...borderClasses);\n                    borderClasses = ['rounded-end', 'rounded-top-0'];\n                    newTemplate.querySelectorAll('td')[4].classList.add(...borderClasses);\n\n                    // Remove bottom border on last row\n                    newTemplate.classList.add('border-bottom-0');\n                }\n            }\n\n            // Insert new template into table\n            const tbody = table.querySelector('tbody');\n            tbody.insertBefore(newTemplate, target.nextSibling);\n        });\n    }\n\n    // Reset subtable\n    const resetSubtable = () => {\n        const subtables = document.querySelectorAll('[data-kt-docs-datatable-subtable=\"subtable_template\"]');\n        subtables.forEach(st => {\n            st.parentNode.removeChild(st);\n        });\n\n        const rows = table.querySelectorAll('tbody tr');\n        rows.forEach(r => {\n            r.classList.remove('isOpen');\n            if (r.querySelector('[data-kt-docs-datatable-subtable=\"expand_row\"]')) {\n                r.querySelector('[data-kt-docs-datatable-subtable=\"expand_row\"]').classList.remove('active');\n            }\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            table = document.querySelector('#kt_docs_datatable_subtable');\n\n            if (!table) {\n                return;\n            }\n\n            initDatatable();\n            handleActionButton();\n        }\n    }\n}();\n\n// Webpack support\nif (typeof module !== 'undefined') {\n    module.exports = KTDocsDatatableSubtable;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTDocsDatatableSubtable.init();\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./frontend/js/custom/documentation/general/datatables/subtable.js\");\n",""],"names":[],"sourceRoot":""}