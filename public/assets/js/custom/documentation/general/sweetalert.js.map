{"version":3,"file":"js/custom/documentation/general/sweetalert.js","mappings":";;;;;;AAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC","sources":["webpack://team1676-apps/./app/views/js/custom/documentation/general/sweetalert.js"],"sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTGeneralSweetAlertDemos = function() {\n    // Private functions\n    const exampleBasic = function() {\n        const button = document.getElementById('kt_docs_sweetalert_basic');\n\n        button.addEventListener('click', e =>{\n            e.preventDefault();\n\n            Swal.fire({\n                text: \"Here's a basic example of SweetAlert!\",\n                icon: \"success\",\n                buttonsStyling: false,\n                confirmButtonText: \"Ok, got it!\",\n                returnFocus: false, // Set to false if you don't want to return the focus to the element that invoked the modal after the modal is closed.\n                customClass: {\n                    confirmButton: \"btn btn-primary\"\n                }\n            });\n        });\n    }\n\n    const exampleHtml = function() {\n        const button = document.getElementById('kt_docs_sweetalert_html');\n\n        button.addEventListener('click', e =>{\n            e.preventDefault();\n\n            Swal.fire({\n                html: 'A SweetAlert content with <strong>bold text</strong>, <a href=\"#\">links</a> or any of our available <span class=\"badge badge-primary\">components</span>',\n                icon: \"info\",\n                buttonsStyling: false,\n                showCancelButton: true,\n                confirmButtonText: \"Ok, got it!\",\n                cancelButtonText: 'Nope, cancel it',\n                customClass: {\n                    confirmButton: \"btn btn-primary\",\n                    cancelButton: 'btn btn-danger'\n                }\n            });\n        });\n    }\n\n    const exampleStates = () => {\n        // Select buttons\n        const infoButton = document.getElementById('kt_docs_sweetalert_state_info');\n        const warningButton = document.getElementById('kt_docs_sweetalert_state_warning');\n        const errorButton = document.getElementById('kt_docs_sweetalert_state_error');\n        const successButton = document.getElementById('kt_docs_sweetalert_state_success');\n        const questionButton = document.getElementById('kt_docs_sweetalert_state_question');\n\n        // Click action handlers\n        infoButton.addEventListener('click', e => {\n            e.preventDefault();\n\n            Swal.fire({\n                text: \"Here's an example of an info SweetAlert!\",\n                icon: \"info\",\n                buttonsStyling: false,\n                confirmButtonText: \"Ok, got it!\",\n                customClass: {\n                    confirmButton: \"btn btn-info\"\n                }\n            });\n        });\n\n        warningButton.addEventListener('click', e => {\n            e.preventDefault();\n\n            Swal.fire({\n                text: \"Here's an example of a warning SweetAlert!\",\n                icon: \"warning\",\n                buttonsStyling: false,\n                confirmButtonText: \"Ok, got it!\",\n                customClass: {\n                    confirmButton: \"btn btn-warning\"\n                }\n            });\n        });\n\n        errorButton.addEventListener('click', e => {\n            e.preventDefault();\n\n            Swal.fire({\n                text: \"Here's an example of an error SweetAlert!\",\n                icon: \"error\",\n                buttonsStyling: false,\n                confirmButtonText: \"Ok, got it!\",\n                customClass: {\n                    confirmButton: \"btn btn-danger\"\n                }\n            });\n        });\n\n        successButton.addEventListener('click', e => {\n            e.preventDefault();\n\n            Swal.fire({\n                text: \"Here's an example of a success SweetAlert!\",\n                icon: \"success\",\n                buttonsStyling: false,\n                confirmButtonText: \"Ok, got it!\",\n                customClass: {\n                    confirmButton: \"btn btn-success\"\n                }\n            });\n        });\n\n        questionButton.addEventListener('click', e => {\n            e.preventDefault();\n\n            Swal.fire({\n                text: \"Here's an example of a question SweetAlert!\",\n                icon: \"question\",\n                buttonsStyling: false,\n                confirmButtonText: \"Ok, got it!\",\n                customClass: {\n                    confirmButton: \"btn btn-primary\"\n                }\n            });\n        });\n    }\n\n    return {\n        // Public Functions\n        init: function() {\n            exampleBasic();\n            exampleHtml();\n            exampleStates();\n        }\n    };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTGeneralSweetAlertDemos.init();\n});\n"],"names":[],"sourceRoot":""}