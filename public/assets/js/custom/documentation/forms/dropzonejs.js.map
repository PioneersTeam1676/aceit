{"version":3,"file":"js/custom/documentation/forms/dropzonejs.js","mappings":";;;;;;AAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,+FAA+F;AAC/F;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC","sources":["webpack://team1676-apps/./frontend/js/custom/documentation/forms/dropzonejs.js"],"sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTFormsDropzoneJSDemos = function () {\n    // Private functions\n    var exampleBasic = function () {\n        // For more info about Dropzone plugin visit:  https://www.dropzonejs.com/#usage\n        var myDropzone = new Dropzone(\"#kt_dropzonejs_example_1\", {\n            url: \"https://keenthemes.com/scripts/void.php\", // Set the url for your upload script location\n            paramName: \"file\", // The name that will be used to transfer the file\n            maxFiles: 10,\n            maxFilesize: 10, // MB\n            addRemoveLinks: true,\n            accept: function (file, done) {\n                if (file.name == \"wow.jpg\") {\n                    done(\"Naha, you don't.\");\n                } else {\n                    done();\n                }\n            }\n        });\n    }\n\n    var exampleQueue = function () {\n        // set the dropzone container id\n        const id = \"#kt_dropzonejs_example_2\";\n        const dropzone = document.querySelector(id);\n\n        // set the preview element template\n        var previewNode = dropzone.querySelector(\".dropzone-item\");\n        previewNode.id = \"\";\n        var previewTemplate = previewNode.parentNode.innerHTML;\n        previewNode.parentNode.removeChild(previewNode);\n\n        var myDropzone = new Dropzone(id, { // Make the whole body a dropzone\n            url: \"https://preview.keenthemes.com/api/dropzone/void.php\", // Set the url for your upload script location\n            parallelUploads: 20,\n            previewTemplate: previewTemplate,\n            maxFilesize: 1, // Max filesize in MB\n            autoQueue: false, // Make sure the files aren't queued until manually added\n            previewsContainer: id + \" .dropzone-items\", // Define the container to display the previews\n            clickable: id + \" .dropzone-select\" // Define the element that should be used as click trigger to select files.\n        });\n\n        myDropzone.on(\"addedfile\", function (file) {\n            // Hookup the start button\n            file.previewElement.querySelector(id + \" .dropzone-start\").onclick = function () { myDropzone.enqueueFile(file); };\n            const dropzoneItems = dropzone.querySelectorAll('.dropzone-item');\n            dropzoneItems.forEach(dropzoneItem => {\n                dropzoneItem.style.display = '';\n            });\n            dropzone.querySelector('.dropzone-upload').style.display = \"inline-block\";\n            dropzone.querySelector('.dropzone-remove-all').style.display = \"inline-block\";\n        });\n\n        // Update the total progress bar\n        myDropzone.on(\"totaluploadprogress\", function (progress) {\n            const progressBars = dropzone.querySelectorAll('.progress-bar');\n            progressBars.forEach(progressBar => {\n                progressBar.style.width = progress + \"%\";\n            });\n        });\n\n        myDropzone.on(\"sending\", function (file) {\n            // Show the total progress bar when upload starts\n            const progressBars = dropzone.querySelectorAll('.progress-bar');\n            progressBars.forEach(progressBar => {\n                progressBar.style.opacity = \"1\";\n            });\n            // And disable the start button\n            file.previewElement.querySelector(id + \" .dropzone-start\").setAttribute(\"disabled\", \"disabled\");\n        });\n\n        // Hide the total progress bar when nothing's uploading anymore\n        myDropzone.on(\"complete\", function (progress) {\n            const progressBars = dropzone.querySelectorAll('.dz-complete');\n\n            setTimeout(function () {\n                progressBars.forEach(progressBar => {\n                    progressBar.querySelector('.progress-bar').style.opacity = \"0\";\n                    progressBar.querySelector('.progress').style.opacity = \"0\";\n                    progressBar.querySelector('.dropzone-start').style.opacity = \"0\";\n                });\n            }, 300);\n        });\n\n        // Setup the buttons for all transfers\n        dropzone.querySelector(\".dropzone-upload\").addEventListener('click', function () {\n            myDropzone.enqueueFiles(myDropzone.getFilesWithStatus(Dropzone.ADDED));\n        });\n\n        // Setup the button for remove all files\n        dropzone.querySelector(\".dropzone-remove-all\").addEventListener('click', function () {\n            dropzone.querySelector('.dropzone-upload').style.display = \"none\";\n            dropzone.querySelector('.dropzone-remove-all').style.display = \"none\";\n            myDropzone.removeAllFiles(true);\n        });\n\n        // On all files completed upload\n        myDropzone.on(\"queuecomplete\", function (progress) {\n            const uploadIcons = dropzone.querySelectorAll('.dropzone-upload');\n            uploadIcons.forEach(uploadIcon => {\n                uploadIcon.style.display = \"none\";\n            });\n        });\n\n        // On all files removed\n        myDropzone.on(\"removedfile\", function (file) {\n            if (myDropzone.files.length < 1) {\n                dropzone.querySelector('.dropzone-upload').style.display = \"none\";\n                dropzone.querySelector('.dropzone-remove-all').style.display = \"none\";\n            }\n        });\n    }\n\n    var exampleQueueAutoUpload = function () {\n        // set the dropzone container id\n        const id = \"#kt_dropzonejs_example_3\";\n        const dropzone = document.querySelector(id);\n\n        // set the preview element template\n        var previewNode = dropzone.querySelector(\".dropzone-item\");\n        previewNode.id = \"\";\n        var previewTemplate = previewNode.parentNode.innerHTML;\n        previewNode.parentNode.removeChild(previewNode);\n\n        var myDropzone = new Dropzone(id, { // Make the whole body a dropzone\n            url: \"https://preview.keenthemes.com/api/dropzone/void.php\", // Set the url for your upload script location\n            parallelUploads: 20,\n            maxFilesize: 1, // Max filesize in MB\n            previewTemplate: previewTemplate,\n            previewsContainer: id + \" .dropzone-items\", // Define the container to display the previews\n            clickable: id + \" .dropzone-select\" // Define the element that should be used as click trigger to select files.\n        });\n\n\n        myDropzone.on(\"addedfile\", function (file) {\n            // Hookup the start button\n            const dropzoneItems = dropzone.querySelectorAll('.dropzone-item');\n            dropzoneItems.forEach(dropzoneItem => {\n                dropzoneItem.style.display = '';\n            });\n        });\n\n        // Update the total progress bar\n        myDropzone.on(\"totaluploadprogress\", function (progress) {\n            const progressBars = dropzone.querySelectorAll('.progress-bar');\n            progressBars.forEach(progressBar => {\n                progressBar.style.width = progress + \"%\";\n            });\n        });\n\n        myDropzone.on(\"sending\", function (file) {\n            // Show the total progress bar when upload starts\n            const progressBars = dropzone.querySelectorAll('.progress-bar');\n            progressBars.forEach(progressBar => {\n                progressBar.style.opacity = \"1\";\n            });\n        });\n\n        // Hide the total progress bar when nothing\"s uploading anymore\n        myDropzone.on(\"complete\", function (progress) {\n            const progressBars = dropzone.querySelectorAll('.dz-complete');\n\n            setTimeout(function () {\n                progressBars.forEach(progressBar => {\n                    progressBar.querySelector('.progress-bar').style.opacity = \"0\";\n                    progressBar.querySelector('.progress').style.opacity = \"0\";\n                });\n            }, 300);\n        });\n    }\n\n    return {\n        // Public Functions\n        init: function (element) {\n            exampleBasic();\n            exampleQueue();\n            exampleQueueAutoUpload();\n        }\n    };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n    KTFormsDropzoneJSDemos.init();\n});\n"],"names":[],"sourceRoot":""}